"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4279],{5638:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-555ea25c",path:"/web/js/issue.html",title:"ISSUE",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"编写add函数 然后 add(1)(2)(3)(4) 输出10",slug:"编写add函数-然后-add-1-2-3-4-输出10",children:[{level:3,title:"重点",slug:"重点",children:[]},{level:3,title:"reference",slug:"reference",children:[]}]},{level:2,title:"“连等赋值”问题",slug:"连等赋值-问题",children:[{level:3,title:"重点",slug:"重点-1",children:[]},{level:3,title:"reference",slug:"reference-1",children:[]}]},{level:2,title:"jquery.validate v. 1.9 ignores some hidden inputs",slug:"jquery-validate-v-1-9-ignores-some-hidden-inputs",children:[{level:3,title:"reference",slug:"reference-2",children:[]}]}],filePathRelative:"web/js/issue.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},5569:(n,a,s)=>{s.r(a),s.d(a,{default:()=>d});var e=s(6252);const t=(0,e.uE)('<h1 id="issue" tabindex="-1"><a class="header-anchor" href="#issue" aria-hidden="true">#</a> ISSUE</h1><h2 id="编写add函数-然后-add-1-2-3-4-输出10" tabindex="-1"><a class="header-anchor" href="#编写add函数-然后-add-1-2-3-4-输出10" aria-hidden="true">#</a> 编写add函数 然后 add(1)(2)(3)(4) 输出10</h2><h3 id="重点" tabindex="-1"><a class="header-anchor" href="#重点" aria-hidden="true">#</a> 重点</h3><ul><li>valueOf</li><li>toString</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> arg_fn <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token function">add</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arg_fn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    fn<span class="token punctuation">.</span><span class="token function-variable function">valueOf</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> fn<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> reference</h3>',6),p={href:"https://juejin.im/entry/58beb514128fe1006456df73",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("一道面试题引发的对 javascript 类型转换的思考"),c=(0,e.uE)('<h2 id="连等赋值-问题" tabindex="-1"><a class="header-anchor" href="#连等赋值-问题" aria-hidden="true">#</a> “连等赋值”问题</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>n<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>\na<span class="token punctuation">.</span>x <span class="token operator">=</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>n<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// --&gt; undefined</span>\n<span class="token function">alert</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// --&gt; {n: 2}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="重点-1" tabindex="-1"><a class="header-anchor" href="#重点-1" aria-hidden="true">#</a> 重点</h3><ul><li>赋值表达式</li><li>右结合性</li></ul><h3 id="reference-1" tabindex="-1"><a class="header-anchor" href="#reference-1" aria-hidden="true">#</a> reference</h3>',5),l={href:"https://segmentfault.com/a/1190000004224719",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("由ES规范学JavaScript(二)：深入理解“连等赋值”问题"),r=(0,e.uE)('<h2 id="jquery-validate-v-1-9-ignores-some-hidden-inputs" tabindex="-1"><a class="header-anchor" href="#jquery-validate-v-1-9-ignores-some-hidden-inputs" aria-hidden="true">#</a> jquery.validate v. 1.9 ignores some hidden inputs</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> validatorSettings <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;validator&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>settings<span class="token punctuation">;</span>\nvalidatorSettings<span class="token punctuation">.</span>ignore <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="reference-2" tabindex="-1"><a class="header-anchor" href="#reference-2" aria-hidden="true">#</a> reference</h3>',3),i={href:"https://stackoverflow.com/questions/8565135/jquery-validate-v-1-9-ignores-some-hidden-inputs",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Uk)("https://stackoverflow.com/questions/8565135/jquery-validate-v-1-9-ignores-some-hidden-inputs"),d={render:function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[(0,e._)("a",p,[o,(0,e.Wm)(s)])]),c,(0,e._)("p",null,[(0,e._)("a",l,[u,(0,e.Wm)(s)])]),r,(0,e._)("p",null,[(0,e._)("a",i,[k,(0,e.Wm)(s)])])],64)}}}}]);