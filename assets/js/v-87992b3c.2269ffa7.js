"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8860],{6894:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-87992b3c",path:"/develop/other/htmlgenpdf.html",title:"爬取html生成pdf",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"针对网页生成pdf",slug:"针对网页生成pdf",children:[]},{level:2,title:"合成pdf",slug:"合成pdf",children:[]},{level:2,title:"如何给pdf加上书签",slug:"如何给pdf加上书签",children:[]},{level:2,title:"书签是什么",slug:"书签是什么",children:[]},{level:2,title:"确定书签页码",slug:"确定书签页码",children:[]},{level:2,title:"生成书签",slug:"生成书签",children:[]},{level:2,title:"加上书签",slug:"加上书签",children:[]},{level:2,title:"问题",slug:"问题",children:[]}],filePathRelative:"develop/other/htmlgenpdf.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},1001:(n,s,a)=>{a.r(s),a.d(s,{default:()=>N});var p=a(6252);const t=(0,p._)("h1",{id:"爬取html生成pdf",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#爬取html生成pdf","aria-hidden":"true"},"#"),(0,p.Uk)(" 爬取html生成pdf")],-1),e=(0,p.Uk)("首先看了这篇文章"),o={href:"https://segmentfault.com/a/1190000016198363",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("前端使用puppeteer 爬虫生成《React.js 小书》PDF并合并"),l=(0,p.Uk)("，发现最后的pdf没有书签，很难受，所以主要在此基础上加了加书签的功能。"),u=(0,p.Uk)("爬去的示例网站为"),i={href:"http://huziketang.mangojuice.top/books/react/",target:"_blank",rel:"noopener noreferrer"},r=(0,p.Uk)("React.js 小书"),k=(0,p.Uk)("，仅做学习交流"),d=(0,p._)("h2",{id:"针对网页生成pdf",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#针对网页生成pdf","aria-hidden":"true"},"#"),(0,p.Uk)(" 针对网页生成pdf")],-1),m=(0,p._)("p",null,"使用puppeteer爬取网页并生成pdf",-1),b={href:"https://zhaoqize.github.io/puppeteer-api-zh_CN/",target:"_blank",rel:"noopener noreferrer"},f=(0,p.Uk)("puppeteer中文文档"),g=(0,p.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://news.ycombinator.com&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>waitUntil<span class="token operator">:</span> <span class="token string">&#39;networkidle2&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">pdf</span><span class="token punctuation">(</span><span class="token punctuation">{</span>path<span class="token operator">:</span> <span class="token string">&#39;hn.pdf&#39;</span><span class="token punctuation">,</span> format<span class="token operator">:</span> <span class="token string">&#39;A4&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="合成pdf" tabindex="-1"><a class="header-anchor" href="#合成pdf" aria-hidden="true">#</a> 合成pdf</h2>',2),h={href:"https://www.npmjs.com/package/pdf-merge",target:"_blank",rel:"noopener noreferrer"},_=(0,p.Uk)("pdf-merge"),v=(0,p.Uk)("：合并pdf"),w=(0,p._)("p",null,"依赖于pdftk",-1),x=(0,p._)("h2",{id:"如何给pdf加上书签",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#如何给pdf加上书签","aria-hidden":"true"},"#"),(0,p.Uk)(" 如何给pdf加上书签")],-1),y={href:"https://www.pdflabs.com/docs/pdftk-man-page/",target:"_blank",rel:"noopener noreferrer"},j=(0,p.Uk)("pdftk"),U=(0,p.Uk)("：一个处理pdf的工具"),B=(0,p.uE)('<ul><li>安装后将bin目录添加到环境变量</li></ul><p>利用<code>update_info_utf8</code>给pdf增加书签：</p><p><code>pdftk &#39;d:\\OpenSource\\My\\genpfdforrsb\\React 小书(无书签).pdf&#39; update_info_utf8 &#39;d:\\OpenSource\\My\\genpfdforrsb\\bookmarks.txt&#39; output &#39;d:\\OpenSource\\My\\genpfdforrsb\\React 小书.pdf&#39;</code></p><h2 id="书签是什么" tabindex="-1"><a class="header-anchor" href="#书签是什么" aria-hidden="true">#</a> 书签是什么</h2><p>也就是bookmarks.txt</p><p>书签格式:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>BookmarkBegin\nBookmarkTitle: PDF Reference (Version 1.5)\nBookmarkLevel: 1\nBookmarkPageNumber: 1\nBookmarkBegin\nBookmarkTitle: Contents\nBookmarkLevel: 2\nBookmarkPageNumber: 3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="确定书签页码" tabindex="-1"><a class="header-anchor" href="#确定书签页码" aria-hidden="true">#</a> 确定书签页码</h2>',8),q={href:"https://www.npmjs.com/package/pdfjs-dist",target:"_blank",rel:"noopener noreferrer"},P=(0,p.Uk)("pdfjs-dist"),$=(0,p.Uk)("：获取单个pdf页数，用于bookmarks.txt中指定页码"),R=(0,p.uE)('<h2 id="生成书签" tabindex="-1"><a class="header-anchor" href="#生成书签" aria-hidden="true">#</a> 生成书签</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> pageArr <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=&gt;</span> c<span class="token punctuation">.</span>numPages<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> txt <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> pageArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">BookmarkBegin\\r\\nBookmarkTitle: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>titleArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\r\\nBookmarkLevel: 1\\r\\nBookmarkPageNumber: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>pageIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\r\\n</span><span class="token template-punctuation string">`</span></span>\n    txt <span class="token operator">+=</span> temp\n    pageIndex <span class="token operator">+=</span> pageArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\nfs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;bookmarks.txt&#39;</span><span class="token punctuation">,</span> txt<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="加上书签" tabindex="-1"><a class="header-anchor" href="#加上书签" aria-hidden="true">#</a> 加上书签</h2><p>参考<code>pdf-merge</code>源码，增加<code>runshell.js</code>用于在node中执行<code>pdftk</code>的命令</p><p>runshell.js如下：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> Promise <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bluebird&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> exec <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">promisify</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>exec<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">scripts</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">exec</span><span class="token punctuation">(</span>scripts<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>reject<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>执行pdftk update_info_utf8</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> nobkname <span class="token operator">=</span> <span class="token string">&#39;React 小书(无书签).pdf&#39;</span>\n<span class="token keyword">const</span> hasbkname <span class="token operator">=</span> <span class="token string">&#39;React 小书.pdf&#39;</span>\n<span class="token function">mergepdf</span><span class="token punctuation">(</span>nobkname<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">buffer</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;starting add bookmarks!&#39;</span><span class="token punctuation">)</span>\n    <span class="token function">runshell</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">pdftk &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>nobkname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; update_info_utf8 &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/bookmarks.txt&quot; output &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hasbkname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;completed add bookmarks!&#39;</span><span class="token punctuation">)</span>\n        fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>nobkname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/bookmarks.txt</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;all completed!&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>文件路径需要用双引号</li></ul>',9),W=(0,p.Uk)("源码："),S={href:"https://github.com/sunven/genpfdforrsb",target:"_blank",rel:"noopener noreferrer"},z=(0,p.Uk)("genpfdforrsb"),A=(0,p._)("h2",{id:"问题",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#问题","aria-hidden":"true"},"#"),(0,p.Uk)(" 问题")],-1),C=(0,p._)("p",null,"合并后的pdf页码不是连续的，还是单个pdf的页码",-1),N={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("p",null,[e,(0,p._)("a",o,[c,(0,p.Wm)(a)]),l]),(0,p._)("p",null,[u,(0,p._)("a",i,[r,(0,p.Wm)(a)]),k]),d,m,(0,p._)("p",null,[(0,p._)("a",b,[f,(0,p.Wm)(a)])]),g,(0,p._)("p",null,[(0,p._)("a",h,[_,(0,p.Wm)(a)]),v]),w,x,(0,p._)("p",null,[(0,p._)("a",y,[j,(0,p.Wm)(a)]),U]),B,(0,p._)("p",null,[(0,p._)("a",q,[P,(0,p.Wm)(a)]),$]),R,(0,p._)("p",null,[W,(0,p._)("a",S,[z,(0,p.Wm)(a)])]),A,C],64)}}}}]);