"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5380],{8722:(e,i,l)=>{l.r(i),l.d(i,{data:()=>a});const a={key:"v-6653b778",path:"/web/css/stackingcontext.html",title:"层叠上下文",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"层叠水平",slug:"层叠水平",children:[]},{level:2,title:"层叠顺序",slug:"层叠顺序",children:[]},{level:2,title:"层叠准则",slug:"层叠准则",children:[]},{level:2,title:"层叠上下文的创建",slug:"层叠上下文的创建",children:[{level:3,title:"根层叠上下文",slug:"根层叠上下文",children:[]},{level:3,title:"定位元素与传统层叠上下文",slug:"定位元素与传统层叠上下文",children:[]},{level:3,title:"CSS3与新时代的层叠上下文",slug:"css3与新时代的层叠上下文",children:[]}]}],filePathRelative:"web/css/stackingcontext.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},26:(e,i,l)=>{l.r(i),l.d(i,{default:()=>t});const a=(0,l(6252).uE)('<h1 id="层叠上下文" tabindex="-1"><a class="header-anchor" href="#层叠上下文" aria-hidden="true">#</a> 层叠上下文</h1><h2 id="层叠水平" tabindex="-1"><a class="header-anchor" href="#层叠水平" aria-hidden="true">#</a> 层叠水平</h2><h2 id="层叠顺序" tabindex="-1"><a class="header-anchor" href="#层叠顺序" aria-hidden="true">#</a> 层叠顺序</h2><ol><li><p>层叠上下文|background/border</p></li><li><p>负z-index</p></li><li><p>block块状水平盒子</p></li><li><p>float浮动盒子</p></li><li><p>inline/inline-block水平盒子</p></li><li><p>z-index:auto或看成z-index:0/不依赖z-index的层叠上下文</p></li><li><p>正z-index</p></li></ol><blockquote><p>序号越大层叠顺序越高</p></blockquote><h2 id="层叠准则" tabindex="-1"><a class="header-anchor" href="#层叠准则" aria-hidden="true">#</a> 层叠准则</h2><ul><li><p>谁大谁上：当具有明显的层叠水平标示的时候，如识别的z-indx值，在同一个层叠上下文领域，层叠水平值大的那一个覆盖小的那一个。</p></li><li><p>后来居上：当元素的层叠水平一致、层叠顺序相同的时候，在DOM流中处于后面的元素会覆盖前面的元素。</p></li></ul><h2 id="层叠上下文的创建" tabindex="-1"><a class="header-anchor" href="#层叠上下文的创建" aria-hidden="true">#</a> 层叠上下文的创建</h2><h3 id="根层叠上下文" tabindex="-1"><a class="header-anchor" href="#根层叠上下文" aria-hidden="true">#</a> 根层叠上下文</h3><p>指的是页面根元素，也就是滚动条的默认的始作俑者<code>&lt;html&gt;</code>元素。这就是为什么，绝对定位元素在left/top等值定位的时候，如果没有其他定位元素限制，会相对浏览器窗口定位的原因。</p><h3 id="定位元素与传统层叠上下文" tabindex="-1"><a class="header-anchor" href="#定位元素与传统层叠上下文" aria-hidden="true">#</a> 定位元素与传统层叠上下文</h3><p>对于包含有position:relative/position:absolute的定位元素，以及FireFox/IE浏览器（不包括Chrome等webkit内核浏览器）（目前，也就是2016年初是这样）下含有position:fixed声明的定位元素，当其z-index值不是auto的时候，会创建层叠上下文</p><h3 id="css3与新时代的层叠上下文" tabindex="-1"><a class="header-anchor" href="#css3与新时代的层叠上下文" aria-hidden="true">#</a> CSS3与新时代的层叠上下文</h3><p>CSS3的出现除了带来了新属性，同时还对过去的很多规则发出了挑战。例如，CSS3 transform对overflow隐藏对position:fixed定位的影响等。而这里，层叠上下文这一块的影响要更加广泛与显著。</p><p>z-index值不为auto的flex项(父元素display:flex|inline-flex). 元素的opacity值不是1. 元素的transform值不是none. 元素mix-blend-mode值不是normal. 元素的filter值不是none. 元素的isolation值是isolate. will-change指定的属性值为上面任意一个。 元素的-webkit-overflow-scrolling设为touch</p>',15),t={render:function(e,i){return a}}}}]);