"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6079],{6876:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-0cca9702",path:"/dotnet/designpatterns/responsibility.html",title:"责任链模式",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"reference",slug:"reference",children:[]}],filePathRelative:"dotnet/designpatterns/responsibility.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},3782:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var p=a(6252);const e=(0,p.uE)('<h1 id="责任链模式" tabindex="-1"><a class="header-anchor" href="#责任链模式" aria-hidden="true">#</a> 责任链模式</h1><p>某个请求需要多个对象进行处理，从而避免请求的发送者和接收之间的耦合关系。将这些对象连成一条链子，并沿着这条链子传递该请求，直到有对象处理它为止</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// 请假请求</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LeaveRequest</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// 天数</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">double</span></span> Days <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token comment">// 姓名</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token function">LeaveRequest</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> days<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        Name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n        Days <span class="token operator">=</span> days<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 审批人</span>\n<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Approver</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name">Approver</span> NextApprover <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> <span class="token function">Approver</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        Name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ProcessRequest</span><span class="token punctuation">(</span><span class="token class-name">LeaveRequest</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>\n<span class="token doc-comment comment">/// 项目管理者</span>\n<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProjectManager</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Approver</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token function">ProjectManager</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>\n        <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ProcessRequest</span><span class="token punctuation">(</span><span class="token class-name">LeaveRequest</span> request<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>Days <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>Name <span class="token operator">+</span> <span class="token string">&quot;同意&quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Name <span class="token operator">+</span> <span class="token string">&quot;请假&quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Days <span class="token operator">+</span> <span class="token string">&quot;天&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">else</span>\n        <span class="token punctuation">{</span>\n            NextApprover<span class="token punctuation">?.</span><span class="token function">ProcessRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>\n<span class="token doc-comment comment">/// 部门管理者</span>\n<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DepartManager</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Approver</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token function">DepartManager</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>\n        <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ProcessRequest</span><span class="token punctuation">(</span><span class="token class-name">LeaveRequest</span> request<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>Days <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>Name <span class="token operator">+</span> <span class="token string">&quot;同意&quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Name <span class="token operator">+</span> <span class="token string">&quot;请假&quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Days <span class="token operator">+</span> <span class="token string">&quot;天&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">else</span>\n        <span class="token punctuation">{</span>\n            NextApprover<span class="token punctuation">?.</span><span class="token function">ProcessRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>\n<span class="token doc-comment comment">/// CEO</span>\n<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Ceo</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Approver</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token function">Ceo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>\n        <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span> <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ProcessRequest</span><span class="token punctuation">(</span><span class="token class-name">LeaveRequest</span> request<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>Days <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>Name <span class="token operator">+</span> <span class="token string">&quot;同意&quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Name <span class="token operator">+</span> <span class="token string">&quot;请假&quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Days <span class="token operator">+</span> <span class="token string">&quot;天&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">else</span>\n        <span class="token punctuation">{</span>\n            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;需要讨论&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><p>调用：</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> leaveRequest1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LeaveRequest</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> leaveRequest2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LeaveRequest</span><span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> leaveRequest3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LeaveRequest</span><span class="token punctuation">(</span><span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> leaveRequest4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LeaveRequest</span><span class="token punctuation">(</span><span class="token string">&quot;赵六&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Approver</span> projectManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ProjectManager</span><span class="token punctuation">(</span><span class="token string">&quot;项目管理者&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Approver</span> departManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DepartManager</span><span class="token punctuation">(</span><span class="token string">&quot;部门管理者&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Approver</span> ceo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Ceo</span><span class="token punctuation">(</span><span class="token string">&quot;CEO&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 设置责任链</span>\nprojectManager<span class="token punctuation">.</span>NextApprover <span class="token operator">=</span> departManager<span class="token punctuation">;</span>\ndepartManager<span class="token punctuation">.</span>NextApprover <span class="token operator">=</span> ceo<span class="token punctuation">;</span>\n<span class="token comment">// 处理请求</span>\nprojectManager<span class="token punctuation">.</span><span class="token function">ProcessRequest</span><span class="token punctuation">(</span>leaveRequest1<span class="token punctuation">)</span><span class="token punctuation">;</span>\nprojectManager<span class="token punctuation">.</span><span class="token function">ProcessRequest</span><span class="token punctuation">(</span>leaveRequest2<span class="token punctuation">)</span><span class="token punctuation">;</span>\nprojectManager<span class="token punctuation">.</span><span class="token function">ProcessRequest</span><span class="token punctuation">(</span>leaveRequest3<span class="token punctuation">)</span><span class="token punctuation">;</span>\nprojectManager<span class="token punctuation">.</span><span class="token function">ProcessRequest</span><span class="token punctuation">(</span>leaveRequest4<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> reference</h2>',6),t={href:"http://www.cnblogs.com/PatrickLiu/p/8109100.html",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("C#设计模式之二十职责链模式（Chain of Responsibility Pattern）【行为型】"),c={href:"http://www.cnblogs.com/zhili/p/ChainOfResponsibity.html",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Uk)("C#设计模式(21)——责任链模式"),u={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[e,(0,p._)("p",null,[(0,p._)("a",t,[o,(0,p.Wm)(a)])]),(0,p._)("p",null,[(0,p._)("a",c,[l,(0,p.Wm)(a)])])],64)}}}}]);