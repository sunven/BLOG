"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1518],{8072:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-d4287202",path:"/web/other/webpack.html",title:"webpack 基础",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"what's webpack",slug:"what-s-webpack",children:[{level:3,title:"wiki",slug:"wiki",children:[]},{level:3,title:"webpack.js.org",slug:"webpack-js-org",children:[]},{level:3,title:"reference",slug:"reference",children:[]}]},{level:2,title:"使用",slug:"使用",children:[{level:3,title:"全局安装webpack",slug:"全局安装webpack",children:[]},{level:3,title:"初始化",slug:"初始化",children:[]},{level:3,title:"为项目安装",slug:"为项目安装",children:[]},{level:3,title:"运行",slug:"运行",children:[]},{level:3,title:"配置 npm start",slug:"配置-npm-start",children:[]},{level:3,title:"Source Maps",slug:"source-maps",children:[]},{level:3,title:"本地服务器",slug:"本地服务器",children:[]}]},{level:2,title:"style-loader",slug:"style-loader",children:[{level:3,title:"局部",slug:"局部",children:[]},{level:3,title:"Url",slug:"url",children:[]},{level:3,title:"Useable",slug:"useable",children:[]},{level:3,title:"options",slug:"options",children:[]},{level:3,title:"reference",slug:"reference-1",children:[]}]},{level:2,title:"css-loader",slug:"css-loader",children:[{level:3,title:"toString",slug:"tostring",children:[]},{level:3,title:"reference",slug:"reference-2",children:[]}]},{level:2,title:"babel-loader",slug:"babel-loader",children:[{level:3,title:"reference",slug:"reference-3",children:[]}]},{level:2,title:"url-loader",slug:"url-loader",children:[{level:3,title:"reference",slug:"reference-4",children:[]}]}],filePathRelative:"web/other/webpack.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},2472:(n,s,a)=>{a.r(s),a.d(s,{default:()=>B});var e=a(6252);const t=(0,e.uE)('<h1 id="webpack-基础" tabindex="-1"><a class="header-anchor" href="#webpack-基础" aria-hidden="true">#</a> webpack 基础</h1><h2 id="what-s-webpack" tabindex="-1"><a class="header-anchor" href="#what-s-webpack" aria-hidden="true">#</a> what&#39;s webpack</h2><h3 id="wiki" tabindex="-1"><a class="header-anchor" href="#wiki" aria-hidden="true">#</a> wiki</h3><p>Webpack 是一个开源的前端打包工具。Webpack 提供了前端开发缺乏的模块化开发方式，将各种静态资源视为模块，并从它生成优化过的代码</p><p>Webpack可以从终端、或是更改 webpack.config.js 来设置各项功能</p><p>要使用 Webpack 前须先安装 Node.js。Webpack 其中一个特性是使用加载器来将资源转化成模块。开发者可以自定义加载器的顺序、格式来因应项目的需求</p>',6),p={href:"https://zh.wikipedia.org/wiki/Webpack",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("https://zh.wikipedia.org/wiki/Webpack"),r=(0,e._)("h3",{id:"webpack-js-org",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#webpack-js-org","aria-hidden":"true"},"#"),(0,e.Uk)(" webpack.js.org")],-1),c=(0,e._)("p",null,"打包所有的资源",-1),o=(0,e._)("p",null,"打包所有的脚本",-1),i=(0,e._)("p",null,"打包所有的图片",-1),u=(0,e._)("p",null,"打包所有的样式",-1),d={href:"https://webpack.js.org/",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("https://webpack.js.org/"),k=(0,e._)("h3",{id:"reference",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),(0,e.Uk)(" reference")],-1),m={href:"https://www.quora.com/What-is-Webpack",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("https://www.quora.com/What-is-Webpack"),g=(0,e.uE)('<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><h3 id="全局安装webpack" tabindex="-1"><a class="header-anchor" href="#全局安装webpack" aria-hidden="true">#</a> 全局安装webpack</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g webpack\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="为项目安装" tabindex="-1"><a class="header-anchor" href="#为项目安装" aria-hidden="true">#</a> 为项目安装</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>webpack.config.js 文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>module.exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    entry: __dirname + <span class="token string">&quot;/app/main.js&quot;</span>,\n    output: <span class="token punctuation">{</span>\n        path: __dirname + <span class="token string">&quot;/public&quot;</span>,\n        filename: <span class="token string">&quot;bundle.js&quot;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>webpack\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="配置-npm-start" tabindex="-1"><a class="header-anchor" href="#配置-npm-start" aria-hidden="true">#</a> 配置 npm start</h3><p>修改 package.json文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token string">&quot;scripts&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>\n  <span class="token string">&quot;start&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;webpack&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="source-maps" tabindex="-1"><a class="header-anchor" href="#source-maps" aria-hidden="true">#</a> Source Maps</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>module.exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    devtool: <span class="token string">&#39;eval-source-map&#39;</span>,\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><table><thead><tr><th>devtool选项</th><th>说明</th></tr></thead><tbody><tr><td>source-map</td><td>在一个单独的文件中产生一个完整且功能完全的文件。这个文件具有最好的source map，但是它会减慢打包速度</td></tr><tr><td>cheap-module-source-map</td><td>在一个单独的文件中生成一个不带列映射的map，不带列映射提高了打包速度，但是也使得浏览器开发者工具只能对应到具体的行，不能对应到具体的列（符号），会对调试造成不便</td></tr><tr><td>eval-source-map</td><td>使用eval打包源文件模块，在同一个文件中生成干净的完整的source map。这个选项可以在不影响构建速度的前提下生成完整的sourcemap，但是对打包后输出的JS文件的执行具有性能和安全的隐患。在开发阶段这是一个非常好的选项，在生产阶段则一定不要启用这个选项</td></tr><tr><td>cheap-module-eval-source-map</td><td>这是在打包文件时最快的生成source map的方法，生成的Source Map 会和打包后的JavaScript文件同行显示，没有列映射，和eval-source-map选项具有相似的缺点</td></tr></tbody></table><h3 id="本地服务器" tabindex="-1"><a class="header-anchor" href="#本地服务器" aria-hidden="true">#</a> 本地服务器</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack-dev-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>webpack.config.js</code>增加</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>module.exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  devServer: <span class="token punctuation">{</span>\n    contentBase: <span class="token string">&quot;./public&quot;</span>,\n    historyApiFallback: true,\n    inline: <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>contentBase</strong>：默认webpack-dev-server会为根文件夹提供本地服务器，如果想为另外一个目录下的文件提供本地服务器，应该在这里设置其所在目录（本例设置到“public&quot;目录）</p><p><strong>port</strong>：设置默认监听端口，如果省略，默认为”8080“</p><p><strong>inline</strong>：inline</p><p><strong>historyApiFallback</strong>：在开发单页应用时非常有用，它依赖于HTML5 history API，如果设置为true，所有的跳转将指向index.html</p><p><code>package.json</code>增加</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token string">&quot;scripts&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>\n  <span class="token string">&quot;server&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;webpack-dev-server --open&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>执行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> run server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="style-loader" tabindex="-1"><a class="header-anchor" href="#style-loader" aria-hidden="true">#</a> style-loader</h2><p>一般与<code>css-loader</code>结合使用</p><h3 id="局部" tabindex="-1"><a class="header-anchor" href="#局部" aria-hidden="true">#</a> 局部</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> /\\.css$/<span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">&quot;style-loader&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> loader<span class="token operator">:</span> <span class="token string">&quot;css-loader&quot;</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> Url</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    module<span class="token operator">:</span> <span class="token punctuation">{</span>\n        rules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            test<span class="token operator">:</span> /\\.css$/<span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    loader<span class="token operator">:</span> <span class="token string">&quot;style-loader/url&quot;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    loader<span class="token operator">:</span> <span class="token string">&quot;file-loader&quot;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="useable" tabindex="-1"><a class="header-anchor" href="#useable" aria-hidden="true">#</a> Useable</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    module<span class="token operator">:</span> <span class="token punctuation">{</span>\n        rules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            test<span class="token operator">:</span> /\\.css$/<span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                    loader<span class="token operator">:</span> <span class="token string">&quot;style-loader/useable&quot;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    loader<span class="token operator">:</span> <span class="token string">&quot;css-loader&quot;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> filecss <span class="token keyword">from</span> <span class="token string">&#39;./css/file.css&#39;</span>\nfilecss<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfilecss<span class="token punctuation">.</span><span class="token function">unuse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>base</td><td>Number</td><td>true</td><td>设置模块 ID 基础 (DLLPlugin)</td></tr><tr><td>attrs</td><td>Object</td><td>{}</td><td>添加自定义 attrs 到 <code>&lt;style&gt;&lt;/style&gt;</code></td></tr><tr><td>transform</td><td>Function</td><td>false</td><td>转换/条件加载 CSS，通过传递转换/条件函数</td></tr><tr><td>insertAt</td><td>String</td><td>bottom</td><td>在给定位置处插入 <code>&lt;style&gt;&lt;/style&gt;</code></td></tr><tr><td>insertInto</td><td>String</td><td><code>&lt;head&gt;</code></td><td>给定位置中插入 <code>&lt;style&gt;&lt;/style&gt;</code></td></tr><tr><td>sourceMap</td><td>Boolean</td><td>false</td><td>启用/禁用 Sourcemap</td></tr><tr><td>convertToAbsoluteUrls</td><td>Boolean</td><td>false</td><td>启用 source map 后，将相对 URL 转换为绝对 URL</td></tr></tbody></table><h3 id="reference-1" tabindex="-1"><a class="header-anchor" href="#reference-1" aria-hidden="true">#</a> reference</h3>',41),v={href:"http://www.css88.com/doc/webpack/loaders/style-loader/",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("style-loader"),x=(0,e.uE)('<h2 id="css-loader" tabindex="-1"><a class="header-anchor" href="#css-loader" aria-hidden="true">#</a> css-loader</h2><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n    module<span class="token operator">:</span> <span class="token punctuation">{</span>\n        rules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            test<span class="token operator">:</span> /\\.css$/<span class="token punctuation">,</span>\n            use<span class="token operator">:</span> <span class="token punctuation">[</span>\n                &#39;css-loader&#39;\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> css <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./css/file.css&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>css<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><table><thead><tr><th>名称</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>root</td><td>String</td><td>/</td><td>解析 URL 的路径，以 / 开头的 URL 不会被转译</td></tr><tr><td>url</td><td>Boolean</td><td>true</td><td>启用/禁用 url() 处理</td></tr><tr><td>alias</td><td>Object</td><td>{}</td><td>创建别名更容易导入一些模块</td></tr><tr><td>import</td><td>Boolean</td><td>true</td><td>启用/禁用 @import 处理</td></tr><tr><td>modules</td><td>Boolean</td><td>false</td><td>启用/禁用 CSS 模块</td></tr><tr><td>minimize</td><td>Boolean \\ Object</td><td>false</td><td>启用/禁用 压缩</td></tr><tr><td>sourceMap</td><td>Boolean</td><td>false</td><td>启用/禁用 Sourcemap</td></tr><tr><td>camelCase</td><td>Boolean \\ String</td><td>false</td><td>以驼峰化式命名导出类名</td></tr><tr><td>importLoaders</td><td>Number</td><td>0</td><td>在 css-loader 前应用的 loader 的数量</td></tr><tr><td>localIdentName</td><td>String</td><td>[hash:base64]</td><td>配置生成的标识符(ident)</td></tr></tbody></table><h3 id="reference-2" tabindex="-1"><a class="header-anchor" href="#reference-2" aria-hidden="true">#</a> reference</h3>',6),w={href:"http://www.css88.com/doc/webpack/loaders/css-loader/",target:"_blank",rel:"noopener noreferrer"},j=(0,e.Uk)("css-loader"),q=(0,e.uE)('<h2 id="babel-loader" tabindex="-1"><a class="header-anchor" href="#babel-loader" aria-hidden="true">#</a> babel-loader</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev babel-loader babel-core babel-preset-env webpack\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(node_modules|bower_components)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">{</span>\n    loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n    options<span class="token operator">:</span> <span class="token punctuation">{</span>\n      presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;env&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li><code>/\\.js$/</code>会匹配所有<code>node_modules</code>中的js导致很慢，所以需要配置<code>exclude</code></li><li>配置<code>cacheDirectory</code>将转译的结果缓存到文件系统中以提速</li><li>babel 在每个文件都插入了辅助代码，使代码体积过大</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> babel-plugin-transform-runtime --save-dev\n<span class="token function">npm</span> <span class="token function">install</span> babel-runtime --save\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// &#39;transform-runtime&#39; 插件告诉 babel 要引用 runtime 来代替注入。</span>\n<span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(node_modules|bower_components)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">{</span>\n    loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>\n    options<span class="token operator">:</span> <span class="token punctuation">{</span>\n      presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;env&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;transform-runtime&#39;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="reference-3" tabindex="-1"><a class="header-anchor" href="#reference-3" aria-hidden="true">#</a> reference</h3>',7),_={href:"http://www.css88.com/doc/webpack/loaders/babel-loader/",target:"_blank",rel:"noopener noreferrer"},y=(0,e.Uk)("babel-loader"),S=(0,e.uE)('<h2 id="url-loader" tabindex="-1"><a class="header-anchor" href="#url-loader" aria-hidden="true">#</a> url-loader</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n    test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpg|gif)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n    use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        loader<span class="token operator">:</span> <span class="token string">&#39;url-loader&#39;</span><span class="token punctuation">,</span>\n        options<span class="token operator">:</span> <span class="token punctuation">{</span>\n            limit<span class="token operator">:</span> <span class="token number">81920</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&quot;[path][name].[ext]&quot;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="reference-4" tabindex="-1"><a class="header-anchor" href="#reference-4" aria-hidden="true">#</a> reference</h3>',3),U={href:"https://blog.csdn.net/qq_38652603/article/details/73835153",target:"_blank",rel:"noopener noreferrer"},W=(0,e.Uk)("webpack学习笔记-2-file-loader 和 url-loader"),B={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[(0,e._)("a",p,[l,(0,e.Wm)(a)])]),r,c,o,i,u,(0,e._)("p",null,[(0,e._)("a",d,[b,(0,e.Wm)(a)])]),k,(0,e._)("p",null,[(0,e._)("a",m,[h,(0,e.Wm)(a)])]),g,(0,e._)("p",null,[(0,e._)("a",v,[f,(0,e.Wm)(a)])]),x,(0,e._)("p",null,[(0,e._)("a",w,[j,(0,e.Wm)(a)])]),q,(0,e._)("p",null,[(0,e._)("a",_,[y,(0,e.Wm)(a)])]),S,(0,e._)("p",null,[(0,e._)("a",U,[W,(0,e.Wm)(a)])])],64)}}}}]);