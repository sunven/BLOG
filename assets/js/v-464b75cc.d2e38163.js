"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3722],{7521:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-464b75cc",path:"/dotnet/designpatterns/memento.html",title:"备忘录模式",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"reference",slug:"reference",children:[]}],filePathRelative:"dotnet/designpatterns/memento.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},4744:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var p=a(6252);const t=(0,p.uE)('<h1 id="备忘录模式" tabindex="-1"><a class="header-anchor" href="#备忘录模式" aria-hidden="true">#</a> 备忘录模式</h1><p>在不破坏封装的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态，这样以后就可以把该对象恢复到原先的状态</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// 联系人--需要备份的数据，是状态数据，没有操作</span>\n<span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">ContactPerson</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//姓名</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token comment">//电话号码</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> MobileNumber <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 备份通讯录发起人</span>\n<span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">MobileBackOriginator</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>ContactPerson<span class="token punctuation">&gt;</span></span> ContactPersonList <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token comment">//初始化需要备份的电话名单</span>\n    <span class="token keyword">public</span> <span class="token function">MobileBackOriginator</span><span class="token punctuation">(</span><span class="token class-name">List<span class="token punctuation">&lt;</span>ContactPerson<span class="token punctuation">&gt;</span></span> personList<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        ContactPersonList <span class="token operator">=</span> personList<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 创建备忘录对象实例，将当期要保存的联系人列表保存到备忘录对象中</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name">Memento</span> <span class="token function">CreateMemento</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Memento</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ContactPerson<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>ContactPersonList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 将备忘录中的数据备份还原到联系人列表中</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RestoreMemento</span><span class="token punctuation">(</span><span class="token class-name">Memento</span> memento<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        ContactPersonList <span class="token operator">=</span> memento<span class="token punctuation">.</span>ContactPersonListBack<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;联系人列表中共有{0}个人，他们是:&quot;</span><span class="token punctuation">,</span> ContactPersonList<span class="token punctuation">.</span>Count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">ContactPerson</span> p <span class="token keyword">in</span> ContactPersonList<span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;姓名: {0} 号码: {1}&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> p<span class="token punctuation">.</span>MobileNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 备忘录对象，用于保存状态数据</span>\n<span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">Memento</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// 保存发起人创建的电话名单数据</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>ContactPerson<span class="token punctuation">&gt;</span></span> ContactPersonListBack <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token function">Memento</span><span class="token punctuation">(</span><span class="token class-name">List<span class="token punctuation">&lt;</span>ContactPerson<span class="token punctuation">&gt;</span></span> personList<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        ContactPersonListBack <span class="token operator">=</span> personList<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 管理角色，它可以管理【备忘录】对象</span>\n<span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">MementoManager</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">//如果想保存多个【备忘录】对象，可以通过字典或者堆栈来保存，堆栈对象可以反映保存对象的先后顺序</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name">Memento</span> ContactPersonMemento <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><p>调用：</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> persons<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ContactPerson<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ContactPerson</span> <span class="token punctuation">{</span> Name<span class="token operator">=</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> MobileNumber <span class="token operator">=</span> <span class="token string">&quot;13533332222&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ContactPerson</span> <span class="token punctuation">{</span> Name<span class="token operator">=</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> MobileNumber <span class="token operator">=</span> <span class="token string">&quot;13966554433&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ContactPerson</span> <span class="token punctuation">{</span> Name<span class="token operator">=</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> MobileNumber <span class="token operator">=</span> <span class="token string">&quot;13198765544&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">//手机名单发起人</span>\n<span class="token class-name"><span class="token keyword">var</span></span> mobileOriginator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MobileBackOriginator</span><span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token punctuation">;</span>\nmobileOriginator<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 创建备忘录并保存备忘录对象</span>\n<span class="token class-name"><span class="token keyword">var</span></span> manager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MementoManager</span> <span class="token punctuation">{</span>ContactPersonMemento <span class="token operator">=</span> mobileOriginator<span class="token punctuation">.</span><span class="token function">CreateMemento</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token comment">// 更改发起人联系人列表</span>\nConsole<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;----移除最后一个联系人--------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmobileOriginator<span class="token punctuation">.</span>ContactPersonList<span class="token punctuation">.</span><span class="token function">RemoveAt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmobileOriginator<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 恢复到原始状态</span>\nConsole<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;-------恢复联系人列表------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmobileOriginator<span class="token punctuation">.</span><span class="token function">RestoreMemento</span><span class="token punctuation">(</span>manager<span class="token punctuation">.</span>ContactPersonMemento<span class="token punctuation">)</span><span class="token punctuation">;</span>\nmobileOriginator<span class="token punctuation">.</span><span class="token function">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> reference</h2>',6),e={href:"http://www.cnblogs.com/PatrickLiu/p/8176974.html",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("C#设计模式之二十二备忘录模式（Memento Pattern）【行为型】"),c={href:"http://www.cnblogs.com/zhili/p/MementoPattern.html",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Uk)("C#设计模式(23)——备忘录模式（Memento Pattern）"),u={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("p",null,[(0,p._)("a",e,[o,(0,p.Wm)(a)])]),(0,p._)("p",null,[(0,p._)("a",c,[l,(0,p.Wm)(a)])])],64)}}}}]);