"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[174],{3500:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-a63ab93a",path:"/reading/goodarticle/2019-01.html",title:"2019-01",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"reading/goodarticle/2019-01.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},880:(n,s,a)=>{a.r(s),a.d(s,{default:()=>q});var p=a(6252);const t=(0,p._)("h1",{id:"_2019-01",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_2019-01","aria-hidden":"true"},"#"),(0,p.Uk)(" 2019-01")],-1),e={href:"http://www.4hou.com/info/news/6152.html",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("走近比特币：一个故事看懂“区块链”"),o=(0,p._)("p",null,"狭义来讲，区块链是一种按照时间顺序将数据区块以顺序相连的方式组合成的一 种链式数据结构， 并以密码学方式保证的不可篡改和不可伪造的分布式账本",-1),l={href:"https://zhuanlan.zhihu.com/p/28140450",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("我用了两个月的时间才理解 let"),r=(0,p._)("ol",null,[(0,p._)("li",null,"let 的「创建」过程被提升了，但是初始化没有提升。"),(0,p._)("li",null,"var 的「创建」和「初始化」都被提升了。"),(0,p._)("li",null,"function 的「创建」「初始化」和「赋值」都被提升了。")],-1),k={href:"http://www.cnblogs.com/loveis715/p/5097475.html",target:"_blank",rel:"noopener noreferrer"},i=(0,p.Uk)("服务的扩展性"),b=(0,p._)("p",null,"应用的扩展：纵向、横向（AKF）",-1),m=(0,p._)("p",null,"服务的扩展：Z轴、缓存、异步",-1),d=(0,p._)("p",null,"数据库的扩展：CAP、纵向扩展、Master-Slave、",-1),y={href:"https://www.cnblogs.com/loveis715/p/4547968.html",target:"_blank",rel:"noopener noreferrer"},w=(0,p.Uk)("企业级负载平衡简介"),f=(0,p._)("p",null,"基于DNS的负载平衡、L3/4负载平衡、L7负载平衡、SSL Farm",-1),g={href:"https://www.cnblogs.com/loveis715/p/4644266.html",target:"_blank",rel:"noopener noreferrer"},v=(0,p.Uk)("Microservice架构模式简介"),_=(0,p._)("p",null,"服务分割、粗粒度的API",-1),h=(0,p._)("p",null,"公共服务:在保持和各个子服务的松耦合性的同时还需要提供一个足够通用的，能够在一定程度上满足所有当前和未来子服务要求的解决方案 因此在集中的公共服务中，我们需要使用较为细粒度的模型",-1),H=(0,p._)("p",null,"Microservice架构模式中的“开”是各个服务的内部实现，而其中的“闭”则是各个服务之间相互沟通的方式",-1),R={href:"https://www.cnblogs.com/artech/p/inside-asp-net-core-framework.html",target:"_blank",rel:"noopener noreferrer"},I=(0,p.Uk)("200行代码，7个对象——让你了解ASP.NET Core框架的本质"),x=(0,p.uE)('<p>HttpContext、RequestDelegate、Middleware、ApplicationBuilder、Server、WebHost、WebHostBuilder</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Program</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WebHostBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">UseHttpListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">Configure</span><span class="token punctuation">(</span>app <span class="token operator">=&gt;</span> app\n                <span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>FooMiddleware<span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>BarMiddleware<span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>BazMiddleware<span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">StartAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">RequestDelegate</span> <span class="token function">FooMiddleware</span><span class="token punctuation">(</span><span class="token class-name">RequestDelegate</span> next<span class="token punctuation">)</span>\n        <span class="token operator">=&gt;</span> <span class="token keyword">async</span> context <span class="token operator">=&gt;</span>\n        <span class="token punctuation">{</span>\n            <span class="token keyword">await</span> context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Foo=&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">RequestDelegate</span> <span class="token function">BarMiddleware</span><span class="token punctuation">(</span><span class="token class-name">RequestDelegate</span> next<span class="token punctuation">)</span>\n        <span class="token operator">=&gt;</span> <span class="token keyword">async</span> context <span class="token operator">=&gt;</span>\n        <span class="token punctuation">{</span>\n            <span class="token keyword">await</span> context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Bar=&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">RequestDelegate</span> <span class="token function">BazMiddleware</span><span class="token punctuation">(</span><span class="token class-name">RequestDelegate</span> next<span class="token punctuation">)</span>\n        <span class="token operator">=&gt;</span> context <span class="token operator">=&gt;</span> context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;Baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">Extensions</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IWebHostBuilder</span> <span class="token function">UseHttpListener</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IWebHostBuilder</span> builder<span class="token punctuation">,</span> <span class="token keyword">params</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> urls<span class="token punctuation">)</span>\n        <span class="token operator">=&gt;</span> builder<span class="token punctuation">.</span><span class="token function">UseServer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpListenerServer</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">Task</span> <span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">HttpResponse</span> response<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> contents<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token class-name"><span class="token keyword">var</span></span> buffer <span class="token operator">=</span> Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>contents<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> response<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">delegate</span> <span class="token return-type class-name">Task</span> <span class="token function">RequestDelegate</span><span class="token punctuation">(</span><span class="token class-name">HttpContext</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpContext</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token return-type class-name">HttpRequest</span> Request <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name">HttpResponse</span> Response <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token function">HttpContext</span><span class="token punctuation">(</span><span class="token class-name">IFeatureCollection</span> features<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        Request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpRequest</span><span class="token punctuation">(</span>features<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        Response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpResponse</span><span class="token punctuation">(</span>features<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpRequest</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IHttpRequestFeature</span> _feature<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token return-type class-name">Uri</span> Url <span class="token operator">=&gt;</span> _feature<span class="token punctuation">.</span>Url<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name">NameValueCollection</span> Headers <span class="token operator">=&gt;</span> _feature<span class="token punctuation">.</span>Headers<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name">Stream</span> Body <span class="token operator">=&gt;</span> _feature<span class="token punctuation">.</span>Body<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token function">HttpRequest</span><span class="token punctuation">(</span><span class="token class-name">IFeatureCollection</span> features<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _feature <span class="token operator">=</span> features<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IHttpRequestFeature<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpResponse</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IHttpResponseFeature</span> _feature<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token return-type class-name">NameValueCollection</span> Headers <span class="token operator">=&gt;</span> _feature<span class="token punctuation">.</span>Headers<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name">Stream</span> Body <span class="token operator">=&gt;</span> _feature<span class="token punctuation">.</span>Body<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> StatusCode\n    <span class="token punctuation">{</span>\n        <span class="token keyword">get</span> <span class="token operator">=&gt;</span> _feature<span class="token punctuation">.</span>StatusCode<span class="token punctuation">;</span>\n        <span class="token keyword">set</span> <span class="token operator">=&gt;</span> _feature<span class="token punctuation">.</span>StatusCode <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token function">HttpResponse</span><span class="token punctuation">(</span><span class="token class-name">IFeatureCollection</span> features<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _feature <span class="token operator">=</span> features<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IHttpResponseFeature<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IApplicationBuilder</span>\n<span class="token punctuation">{</span>\n    <span class="token return-type class-name">IApplicationBuilder</span> <span class="token function">Use</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>RequestDelegate<span class="token punctuation">,</span> RequestDelegate<span class="token punctuation">&gt;</span></span> middleware<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token return-type class-name">RequestDelegate</span> <span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApplicationBuilder</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IApplicationBuilder</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">List<span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span>RequestDelegate<span class="token punctuation">,</span> RequestDelegate<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> _middlewares <span class="token operator">=</span>\n        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Func<span class="token punctuation">&lt;</span>RequestDelegate<span class="token punctuation">,</span> RequestDelegate<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token return-type class-name">RequestDelegate</span> <span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> httpContext <span class="token operator">=&gt;</span>\n        <span class="token punctuation">{</span>\n            <span class="token class-name">RequestDelegate</span> next <span class="token operator">=</span> _ <span class="token operator">=&gt;</span>\n            <span class="token punctuation">{</span>\n                _<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>StatusCode <span class="token operator">=</span> <span class="token number">404</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> Task<span class="token punctuation">.</span>CompletedTask<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            _middlewares<span class="token punctuation">.</span><span class="token function">Reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> middleware <span class="token keyword">in</span> _middlewares<span class="token punctuation">)</span>\n            <span class="token punctuation">{</span>\n                next <span class="token operator">=</span> <span class="token function">middleware</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>httpContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token return-type class-name">IApplicationBuilder</span> <span class="token function">Use</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>RequestDelegate<span class="token punctuation">,</span> RequestDelegate<span class="token punctuation">&gt;</span></span> middleware<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        _middlewares<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>middleware<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IServer</span>\n<span class="token punctuation">{</span>\n    <span class="token return-type class-name">Task</span> <span class="token function">StartAsync</span><span class="token punctuation">(</span><span class="token class-name">RequestDelegate</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IFeatureCollection</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IDictionary<span class="token punctuation">&lt;</span>Type<span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span>\n<span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeatureCollection</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Dictionary<span class="token punctuation">&lt;</span>Type<span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">IFeatureCollection</span></span>\n<span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">Extensions</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">T</span> <span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IFeatureCollection</span> features<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n        features<span class="token punctuation">.</span><span class="token function">TryGetValue</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">T</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">var</span></span> <span class="token keyword">value</span><span class="token punctuation">)</span> <span class="token punctuation">?</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span> <span class="token keyword">value</span> <span class="token punctuation">:</span> <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token type-expression class-name">T</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">IFeatureCollection</span> <span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IFeatureCollection</span> features<span class="token punctuation">,</span> <span class="token class-name">T</span> feature<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        features<span class="token punctuation">[</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">T</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> feature<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> features<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IHttpRequestFeature</span>\n<span class="token punctuation">{</span>\n    <span class="token return-type class-name">Uri</span> Url <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token return-type class-name">NameValueCollection</span> Headers <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token return-type class-name">Stream</span> Body <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IHttpResponseFeature</span>\n<span class="token punctuation">{</span>\n    <span class="token return-type class-name"><span class="token keyword">int</span></span> StatusCode <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token return-type class-name">NameValueCollection</span> Headers <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token return-type class-name">Stream</span> Body <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpListenerFeature</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IHttpRequestFeature</span><span class="token punctuation">,</span> <span class="token class-name">IHttpResponseFeature</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">HttpListenerContext</span> _context<span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token function">HttpListenerFeature</span><span class="token punctuation">(</span><span class="token class-name">HttpListenerContext</span> context<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _context <span class="token operator">=</span> context<span class="token punctuation">;</span>\n\n    <span class="token return-type class-name">Uri</span> IHttpRequestFeature<span class="token punctuation">.</span>Url <span class="token operator">=&gt;</span> _context<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Url<span class="token punctuation">;</span>\n    <span class="token return-type class-name">NameValueCollection</span> IHttpRequestFeature<span class="token punctuation">.</span>Headers <span class="token operator">=&gt;</span> _context<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Headers<span class="token punctuation">;</span>\n    <span class="token return-type class-name">NameValueCollection</span> IHttpResponseFeature<span class="token punctuation">.</span>Headers <span class="token operator">=&gt;</span> _context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>Headers<span class="token punctuation">;</span>\n    <span class="token return-type class-name">Stream</span> IHttpRequestFeature<span class="token punctuation">.</span>Body <span class="token operator">=&gt;</span> _context<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>InputStream<span class="token punctuation">;</span>\n    <span class="token return-type class-name">Stream</span> IHttpResponseFeature<span class="token punctuation">.</span>Body <span class="token operator">=&gt;</span> _context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>OutputStream<span class="token punctuation">;</span>\n\n    <span class="token return-type class-name"><span class="token keyword">int</span></span> IHttpResponseFeature<span class="token punctuation">.</span>StatusCode\n    <span class="token punctuation">{</span>\n        <span class="token keyword">get</span> <span class="token operator">=&gt;</span> _context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>StatusCode<span class="token punctuation">;</span>\n        <span class="token keyword">set</span> <span class="token operator">=&gt;</span> _context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>StatusCode <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpListenerServer</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IServer</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">HttpListener</span> _httpListener<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> _urls<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token function">HttpListenerServer</span><span class="token punctuation">(</span><span class="token keyword">params</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> urls<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        _httpListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        _urls <span class="token operator">=</span> urls<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">?</span> urls <span class="token punctuation">:</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token string">&quot;http://localhost:5000/&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">StartAsync</span><span class="token punctuation">(</span><span class="token class-name">RequestDelegate</span> handler<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        Array<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span>_urls<span class="token punctuation">,</span> url <span class="token operator">=&gt;</span> _httpListener<span class="token punctuation">.</span>Prefixes<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        _httpListener<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            <span class="token class-name"><span class="token keyword">var</span></span> listenerContext <span class="token operator">=</span> <span class="token keyword">await</span> _httpListener<span class="token punctuation">.</span><span class="token function">GetContextAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name"><span class="token keyword">var</span></span> feature <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpListenerFeature</span><span class="token punctuation">(</span>listenerContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name"><span class="token keyword">var</span></span> features <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FeatureCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IHttpRequestFeature<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>feature<span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IHttpResponseFeature<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>feature<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name"><span class="token keyword">var</span></span> httpContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpContext</span><span class="token punctuation">(</span>features<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">await</span> <span class="token function">handler</span><span class="token punctuation">(</span>httpContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            listenerContext<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IWebHost</span>\n<span class="token punctuation">{</span>\n    <span class="token return-type class-name">Task</span> <span class="token function">StartAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebHost</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IWebHost</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IServer</span> _server<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">RequestDelegate</span> _handler<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token function">WebHost</span><span class="token punctuation">(</span><span class="token class-name">IServer</span> server<span class="token punctuation">,</span> <span class="token class-name">RequestDelegate</span> handler<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        _server <span class="token operator">=</span> server<span class="token punctuation">;</span>\n        _handler <span class="token operator">=</span> handler<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token return-type class-name">Task</span> <span class="token function">StartAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _server<span class="token punctuation">.</span><span class="token function">StartAsync</span><span class="token punctuation">(</span>_handler<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IWebHostBuilder</span>\n<span class="token punctuation">{</span>\n    <span class="token return-type class-name">IWebHostBuilder</span> <span class="token function">UseServer</span><span class="token punctuation">(</span><span class="token class-name">IServer</span> server<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token return-type class-name">IWebHostBuilder</span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">Action<span class="token punctuation">&lt;</span>IApplicationBuilder<span class="token punctuation">&gt;</span></span> configure<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token return-type class-name">IWebHost</span> <span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebHostBuilder</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IWebHostBuilder</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">IServer</span> _server<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">List<span class="token punctuation">&lt;</span>Action<span class="token punctuation">&lt;</span>IApplicationBuilder<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> _configures <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Action<span class="token punctuation">&lt;</span>IApplicationBuilder<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token return-type class-name">IWebHostBuilder</span> <span class="token function">Configure</span><span class="token punctuation">(</span><span class="token class-name">Action<span class="token punctuation">&lt;</span>IApplicationBuilder<span class="token punctuation">&gt;</span></span> configure<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        _configures<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>configure<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token return-type class-name">IWebHostBuilder</span> <span class="token function">UseServer</span><span class="token punctuation">(</span><span class="token class-name">IServer</span> server<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        _server <span class="token operator">=</span> server<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token return-type class-name">IWebHost</span> <span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ApplicationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> configure <span class="token keyword">in</span> _configures<span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            <span class="token function">configure</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">WebHost</span><span class="token punctuation">(</span>_server<span class="token punctuation">,</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br></div></div>',2),q={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("p",null,[(0,p._)("a",e,[c,(0,p.Wm)(a)])]),o,(0,p._)("p",null,[(0,p._)("a",l,[u,(0,p.Wm)(a)])]),r,(0,p._)("p",null,[(0,p._)("a",k,[i,(0,p.Wm)(a)])]),b,m,d,(0,p._)("p",null,[(0,p._)("a",y,[w,(0,p.Wm)(a)])]),f,(0,p._)("p",null,[(0,p._)("a",g,[v,(0,p.Wm)(a)])]),_,h,H,(0,p._)("p",null,[(0,p._)("a",R,[I,(0,p.Wm)(a)])]),x],64)}}}}]);