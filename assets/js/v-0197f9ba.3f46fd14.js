"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2021],{4861:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-0197f9ba",path:"/dotnet/designpatterns/mediator.html",title:"中介者模式",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"reference",slug:"reference",children:[]}],filePathRelative:"dotnet/designpatterns/mediator.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},4738:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var p=a(6252);const e=(0,p.uE)('<h1 id="中介者模式" tabindex="-1"><a class="header-anchor" href="#中介者模式" aria-hidden="true">#</a> 中介者模式</h1><p>定义一个中介对象来封装一系列对象之间的交互关系。中介者使各个对象之间不需要显式地相互引用，从而使耦合性降低，而且可以独立地改变它们之间的交互行为</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// 淘宝用户抽象类</span>\n<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">TbUser</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> MoneyCount <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> <span class="token function">TbUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        MoneyCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MoneyChange</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> count<span class="token punctuation">,</span> <span class="token class-name">Mediator</span> mediator<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 买家</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Buyer</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">TbUser</span></span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// 依赖与抽象中介者对象</span>\n    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MoneyChange</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> count<span class="token punctuation">,</span> <span class="token class-name">Mediator</span> mediator<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        mediator<span class="token punctuation">.</span><span class="token function">BuyerMoneyChange</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 卖家</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Seller</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">TbUser</span></span>\n<span class="token punctuation">{</span>\n    <span class="token comment">// 依赖与抽象中介者对象</span>\n    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MoneyChange</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> count<span class="token punctuation">,</span> <span class="token class-name">Mediator</span> mediator<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        mediator<span class="token punctuation">.</span><span class="token function">SellerMoneyChange</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Mediator</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">protected</span> <span class="token class-name">TbUser</span> Buyer<span class="token punctuation">;</span>\n    <span class="token keyword">protected</span> <span class="token class-name">TbUser</span> Seller<span class="token punctuation">;</span>\n    <span class="token keyword">protected</span> <span class="token function">Mediator</span><span class="token punctuation">(</span><span class="token class-name">TbUser</span> buyer<span class="token punctuation">,</span> <span class="token class-name">TbUser</span> seller<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        Buyer <span class="token operator">=</span> buyer<span class="token punctuation">;</span>\n        Seller <span class="token operator">=</span> seller<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">BuyerMoneyChange</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SellerMoneyChange</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MediatorImp</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Mediator</span></span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token function">MediatorImp</span><span class="token punctuation">(</span><span class="token class-name">TbUser</span> buyer<span class="token punctuation">,</span> <span class="token class-name">TbUser</span> seller<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>buyer<span class="token punctuation">,</span> seller<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">BuyerMoneyChange</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> count<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;买家买东西&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        Buyer<span class="token punctuation">.</span>MoneyCount <span class="token operator">-=</span> count<span class="token punctuation">;</span>\n        Seller<span class="token punctuation">.</span>MoneyCount <span class="token operator">+=</span> count<span class="token punctuation">;</span>\n        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>Buyer<span class="token punctuation">.</span>MoneyCount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SellerMoneyChange</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> count<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;卖家退货&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        Seller<span class="token punctuation">.</span>MoneyCount <span class="token operator">-=</span> count<span class="token punctuation">;</span>\n        Buyer<span class="token punctuation">.</span>MoneyCount <span class="token operator">+=</span> count<span class="token punctuation">;</span>\n        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>Seller<span class="token punctuation">.</span>MoneyCount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><p>调用：</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> buyer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Buyer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> seller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Seller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name"><span class="token keyword">var</span></span> mediator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MediatorImp</span><span class="token punctuation">(</span>buyer<span class="token punctuation">,</span> seller<span class="token punctuation">)</span><span class="token punctuation">;</span>\nbuyer<span class="token punctuation">.</span><span class="token function">MoneyChange</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> mediator<span class="token punctuation">)</span><span class="token punctuation">;</span>\nseller<span class="token punctuation">.</span><span class="token function">MoneyChange</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> mediator<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> reference</h2>',6),t={href:"http://www.cnblogs.com/PatrickLiu/p/7966240.html",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("C#设计模式之十七中介者模式（Mediator Pattern）【行为型】"),c={href:"http://www.cnblogs.com/zhili/p/MediatorPattern.html",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Uk)("C#设计模式(18)——中介者模式（Mediator Pattern）"),u={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[e,(0,p._)("p",null,[(0,p._)("a",t,[o,(0,p.Wm)(a)])]),(0,p._)("p",null,[(0,p._)("a",c,[l,(0,p.Wm)(a)])])],64)}}}}]);