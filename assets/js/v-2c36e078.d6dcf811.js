"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4846],{2585:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-2c36e078",path:"/web/react/base.html",title:"React 基础",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"HTML 模板",slug:"html-模板",children:[]},{level:2,title:"ReactDOM.render()",slug:"reactdom-render",children:[]},{level:2,title:"JSX 语法",slug:"jsx-语法",children:[]},{level:2,title:"组件",slug:"组件",children:[]},{level:2,title:"this.props.children",slug:"this-props-children",children:[]},{level:2,title:"PropTypes",slug:"proptypes",children:[{level:3,title:"getDefaultProps",slug:"getdefaultprops",children:[]}]},{level:2,title:"获取真实的DOM节点",slug:"获取真实的dom节点",children:[]},{level:2,title:"this.state",slug:"this-state",children:[]},{level:2,title:"表单",slug:"表单",children:[]},{level:2,title:"组件的生命周期",slug:"组件的生命周期",children:[]},{level:2,title:"Ajax",slug:"ajax",children:[]}],filePathRelative:"web/react/base.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},9207:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});const e=(0,a(6252).uE)('<h1 id="react-基础" tabindex="-1"><a class="header-anchor" href="#react-基础" aria-hidden="true">#</a> React 基础</h1><h2 id="html-模板" tabindex="-1"><a class="header-anchor" href="#html-模板" aria-hidden="true">#</a> HTML 模板</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;script type=&quot;text/babel&quot;&gt;\n//...\n&lt;/script&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>react.js</strong>：React 的核心库</p><p><strong>react-dom.js</strong>：提供与 DOM 相关的功能</p><p><strong>Browser.js</strong>：将 JSX 语法转为 JavaScript 语法</p><h2 id="reactdom-render" tabindex="-1"><a class="header-anchor" href="#reactdom-render" aria-hidden="true">#</a> ReactDOM.render()</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ReactDOM.render(\n  &lt;h1&gt;Hello, world!&lt;/h1&gt;,\n  document.getElementById(&#39;example&#39;)\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="jsx-语法" tabindex="-1"><a class="header-anchor" href="#jsx-语法" aria-hidden="true">#</a> JSX 语法</h2><p>example1</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var names = [&#39;Alice&#39;, &#39;Emily&#39;, &#39;Kate&#39;];\n\nReactDOM.render(\n  &lt;div&gt;\n  {\n    names.map(function (name) {\n      return &lt;div&gt;Hello, {name}!&lt;/div&gt;\n    })\n  }\n  &lt;/div&gt;,\n  document.getElementById(&#39;example&#39;)\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>example2</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var arr = [\n  &lt;h1&gt;Hello world!&lt;/h1&gt;,\n  &lt;h2&gt;React is awesome&lt;/h2&gt;,\n];\nReactDOM.render(\n  &lt;div&gt;{arr}&lt;/div&gt;,\n  document.getElementById(&#39;example&#39;)\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var HelloMessage = React.createClass({\n  render: function() {\n    return &lt;h1&gt;Hello {this.props.name}&lt;/h1&gt;;\n  }\n});\n\nReactDOM.render(\n  &lt;HelloMessage name=&quot;John&quot; /&gt;,\n  document.getElementById(&#39;example&#39;)\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="this-props-children" tabindex="-1"><a class="header-anchor" href="#this-props-children" aria-hidden="true">#</a> this.props.children</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var NotesList = React.createClass({\n  render: function() {\n    return (\n      &lt;ol&gt;\n      {\n        React.Children.map(this.props.children, function (child) {\n          return &lt;li&gt;{child}&lt;/li&gt;;\n        })\n      }\n      &lt;/ol&gt;\n    );\n  }\n});\n\nReactDOM.render(\n  &lt;NotesList&gt;\n    &lt;span&gt;hello&lt;/span&gt;\n    &lt;span&gt;world&lt;/span&gt;\n  &lt;/NotesList&gt;,\n  document.body\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="proptypes" tabindex="-1"><a class="header-anchor" href="#proptypes" aria-hidden="true">#</a> PropTypes</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> MyTitle <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  propTypes<span class="token operator">:</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> React<span class="token punctuation">.</span>PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>title<span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="getdefaultprops" tabindex="-1"><a class="header-anchor" href="#getdefaultprops" aria-hidden="true">#</a> getDefaultProps</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> MyTitle <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">getDefaultProps</span> <span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      title <span class="token operator">:</span> <span class="token string">&#39;Hello World&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>title<span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>MyTitle <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  document<span class="token punctuation">.</span>body\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="获取真实的dom节点" tabindex="-1"><a class="header-anchor" href="#获取真实的dom节点" aria-hidden="true">#</a> 获取真实的DOM节点</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var MyComponent = React.createClass({\n  handleClick: function() {\n    this.refs.myTextInput.focus();\n  },\n  render: function() {\n    return (\n      &lt;div&gt;\n        &lt;input type=&quot;text&quot; ref=&quot;myTextInput&quot; /&gt;\n        &lt;input type=&quot;button&quot; value=&quot;Focus the text input&quot; onClick={this.handleClick} /&gt;\n      &lt;/div&gt;\n    );\n  }\n});\n\nReactDOM.render(\n  &lt;MyComponent /&gt;,\n  document.getElementById(&#39;example&#39;)\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="this-state" tabindex="-1"><a class="header-anchor" href="#this-state" aria-hidden="true">#</a> this.state</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var LikeButton = React.createClass({\n  getInitialState: function() {\n    return {liked: false};\n  },\n  handleClick: function(event) {\n    this.setState({liked: !this.state.liked});\n  },\n  render: function() {\n    var text = this.state.liked ? &#39;like&#39; : &#39;haven\\&#39;t liked&#39;;\n    return (\n      &lt;p onClick={this.handleClick}&gt;\n        You {text} this. Click to toggle.\n      &lt;/p&gt;\n    );\n  }\n});\n\nReactDOM.render(\n  &lt;LikeButton /&gt;,\n  document.getElementById(&#39;example&#39;)\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="表单" tabindex="-1"><a class="header-anchor" href="#表单" aria-hidden="true">#</a> 表单</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var Input = React.createClass({\n  getInitialState: function() {\n    return {value: &#39;Hello!&#39;};\n  },\n  handleChange: function(event) {\n    this.setState({value: event.target.value});\n  },\n  render: function () {\n    var value = this.state.value;\n    return (\n      &lt;div&gt;\n        &lt;input type=&quot;text&quot; value={value} onChange={this.handleChange} /&gt;\n        &lt;p&gt;{value}&lt;/p&gt;\n      &lt;/div&gt;\n    );\n  }\n});\n\nReactDOM.render(&lt;Input/&gt;, document.body);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="组件的生命周期" tabindex="-1"><a class="header-anchor" href="#组件的生命周期" aria-hidden="true">#</a> 组件的生命周期</h2><p>三个状态</p><ul><li>Mounting：已插入真实 DOM</li><li>Updating：正在被重新渲染</li><li>Unmounting：已移出真实 DOM</li></ul><p>五种处理函数</p><p>will函数在进入状态之前调用，did函数在进入状态之后调用</p><ul><li>componentWillMount()</li><li>componentDidMount()</li><li>componentWillUpdate(object nextProps, object nextState)</li><li>componentDidUpdate(object prevProps, object prevState)</li><li>componentWillUnmount()</li></ul><p>两种特殊状态的处理函数</p><ul><li>componentWillReceiveProps(object nextProps)：已加载组件收到新的参数时调用</li><li>shouldComponentUpdate(object nextProps, object nextState)：组件判断是否重新渲染时调用</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var Hello = React.createClass({\n  getInitialState: function () {\n    return {\n      opacity: 1.0\n    };\n  },\n\n  componentDidMount: function () {\n    this.timer = setInterval(function () {\n      var opacity = this.state.opacity;\n      opacity -= .05;\n      if (opacity &lt; 0.1) {\n        opacity = 1.0;\n      }\n      this.setState({\n        opacity: opacity\n      });\n    }.bind(this), 100);\n  },\n\n  render: function () {\n    return (\n      &lt;div style={{opacity: this.state.opacity}}&gt;\n        Hello {this.props.name}\n      &lt;/div&gt;\n    );\n  }\n});\n\nReactDOM.render(\n  &lt;Hello name=&quot;world&quot;/&gt;,\n  document.body\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> Ajax</h2><p>example1</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var UserGist = React.createClass({\n  getInitialState: function() {\n    return {\n      username: &#39;&#39;,\n      lastGistUrl: &#39;&#39;\n    };\n  },\n\n  componentDidMount: function() {\n    $.get(this.props.source, function(result) {\n      var lastGist = result[0];\n      if (this.isMounted()) {\n        this.setState({\n          username: lastGist.owner.login,\n          lastGistUrl: lastGist.html_url\n        });\n      }\n    }.bind(this));\n  },\n\n  render: function() {\n    return (\n      &lt;div&gt;\n        {this.state.username}&#39;s last gist is\n        &lt;a href={this.state.lastGistUrl}&gt;here&lt;/a&gt;.\n      &lt;/div&gt;\n    );\n  }\n});\n\nReactDOM.render(\n  &lt;UserGist source=&quot;https://api.github.com/users/octocat/gists&quot; /&gt;,\n  document.body\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>example2</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>var RepoList = React.createClass({\n  getInitialState: function() {\n    return { loading: true, error: null, data: null};\n  },\n\n  componentDidMount() {\n    this.props.promise.then(\n      value =&gt; this.setState({loading: false, data: value}),\n      error =&gt; this.setState({loading: false, error: error}));\n  },\n\n  render: function() {\n    if (this.state.loading) {\n      return &lt;span&gt;Loading...&lt;/span&gt;;\n    }\n    else if (this.state.error !== null) {\n      return &lt;span&gt;Error: {this.state.error.message}&lt;/span&gt;;\n    }\n    else {\n      var repos = this.state.data.items;\n      var repoList = repos.map(function (repo) {\n        return (\n          &lt;li&gt;\n            &lt;a href={repo.html_url}&gt;{repo.name}&lt;/a&gt; ({repo.stargazers_count} stars) &lt;br/&gt; {repo.description}\n          &lt;/li&gt;\n        );\n      });\n      return (\n        &lt;main&gt;\n          &lt;h1&gt;Most Popular JavaScript Projects in Github&lt;/h1&gt;\n          &lt;ol&gt;{repoList}&lt;/ol&gt;\n        &lt;/main&gt;\n      );\n    }\n  }\n});\n\nReactDOM.render(\n  &lt;RepoList\n    promise={$.getJSON(&#39;https://api.github.com/search/repositories?q=javascript&amp;sort=stars&#39;)}\n  /&gt;,\n  document.body\n);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div>',41),l={render:function(n,s){return e}}}}]);