"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4125],{4942:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-3209a199",path:"/develop/algorithm/commonlyused.html",title:"常用算法",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"找出某个节点的所有父节点",slug:"找出某个节点的所有父节点",children:[]},{level:2,title:"简单格式的(pid)treeData转复杂格式(children)",slug:"简单格式的-pid-treedata转复杂格式-children",children:[{level:3,title:"1",slug:"_1",children:[]},{level:3,title:"2",slug:"_2",children:[]}]}],filePathRelative:"develop/algorithm/commonlyused.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},9708:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var p=a(6252);const t=(0,p.uE)('<h1 id="常用算法" tabindex="-1"><a class="header-anchor" href="#常用算法" aria-hidden="true">#</a> 常用算法</h1><h2 id="找出某个节点的所有父节点" tabindex="-1"><a class="header-anchor" href="#找出某个节点的所有父节点" aria-hidden="true">#</a> 找出某个节点的所有父节点</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n  <span class="token string">&quot;Id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8797095327872057671&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;MenuName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node1&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;Children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    <span class="token string">&quot;Id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8797095327872057672&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;MenuName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node2&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n      <span class="token string">&quot;Id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8797095327872057681&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;MenuName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node3&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;Children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        <span class="token string">&quot;Id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8797095327872057808&quot;</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;MenuName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node4&quot;</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;Children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;Id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8797095327872057673&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;MenuName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node5&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> id<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> element <span class="token operator">=</span> data<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>Id <span class="token operator">==</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">//找到返回</span>\n      <span class="token keyword">return</span> arr<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>Children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">find</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>Children<span class="token punctuation">,</span> id<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>\n        <span class="token comment">//将父节点添加到arr，继续返回true</span>\n        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">find</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token string">&quot;8797095327872057808&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">//[&quot;8797095327872057681&quot;, &quot;8797095327872057672&quot;, &quot;8797095327872057671&quot;]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="简单格式的-pid-treedata转复杂格式-children" tabindex="-1"><a class="header-anchor" href="#简单格式的-pid-treedata转复杂格式-children" aria-hidden="true">#</a> 简单格式的(pid)treeData转复杂格式(children)</h2><h3 id="_1" tabindex="-1"><a class="header-anchor" href="#_1" aria-hidden="true">#</a> 1</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    <span class="token string">&#39;id&#39;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;parentid&#39;</span><span class="token operator">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token string">&#39;id&#39;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;parentid&#39;</span><span class="token operator">:</span> <span class="token number">2</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token string">&#39;id&#39;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;parentid&#39;</span><span class="token operator">:</span> <span class="token number">1</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token string">&#39;id&#39;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;parentid&#39;</span><span class="token operator">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token string">&#39;id&#39;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;parentid&#39;</span><span class="token operator">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token string">&#39;id&#39;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;parentid&#39;</span><span class="token operator">:</span> <span class="token number">1</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token string">&#39;id&#39;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;parentid&#39;</span><span class="token operator">:</span> <span class="token number">4</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token string">&#39;id&#39;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>\n    <span class="token string">&#39;parentid&#39;</span><span class="token operator">:</span> <span class="token number">1</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">unflatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> tree <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    mappedArr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    arrElem<span class="token punctuation">,</span>\n    mappedElem<span class="token punctuation">;</span>\n  <span class="token comment">// First map the nodes of the array to an object -&gt; create a hash table.</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    arrElem <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    mappedArr<span class="token punctuation">[</span>arrElem<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> arrElem<span class="token punctuation">;</span>\n    mappedArr<span class="token punctuation">[</span>arrElem<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;children&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> id <span class="token keyword">in</span> mappedArr<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>mappedArr<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      mappedElem <span class="token operator">=</span> mappedArr<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token comment">// If the element is not at the root level, add it to its parent array of children.</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>mappedElem<span class="token punctuation">.</span>parentid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        mappedArr<span class="token punctuation">[</span>mappedElem<span class="token punctuation">[</span><span class="token string">&#39;parentid&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;children&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>mappedElem<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">// If the element is at the root level, add it to first level elements array.</span>\n      <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        tree<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>mappedElem<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> tree<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">var</span> tree <span class="token operator">=</span> <span class="token function">unflatten</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">;</span>\ndocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;&lt;pre&gt;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>tree<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div>',6),e={href:"http://jsfiddle.net/alexandrupausan/qjxpLhfu/",target:"_blank",rel:"noopener noreferrer"},o=(0,p.Uk)("http://jsfiddle.net/alexandrupausan/qjxpLhfu/"),c=(0,p.uE)('<h3 id="_2" tabindex="-1"><a class="header-anchor" href="#_2" aria-hidden="true">#</a> 2</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;105&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;105&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;1005&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;105&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;1005&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;10&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;100&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;10001&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;10001&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;11&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;1000&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;100&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;1000&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;100&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;100&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;101&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;101&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;101&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;1002&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;103&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;102&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span>\n    pId<span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;13&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> item <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>pId <span class="token operator">==</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      item<span class="token punctuation">.</span>chriden <span class="token operator">=</span> item<span class="token punctuation">.</span>chriden <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      item<span class="token punctuation">.</span>chriden<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>chriden<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">abc</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> item<span class="token punctuation">.</span>chriden<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> element <span class="token operator">=</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">abc</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">test</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token function">test</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>\ndocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;&lt;pre&gt;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">&quot;  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div>',2),l={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("p",null,[(0,p._)("a",e,[o,(0,p.Wm)(a)])]),c],64)}}}}]);