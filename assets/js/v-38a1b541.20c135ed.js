"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6314],{6500:(e,a,i)=>{i.r(a),i.d(a,{data:()=>r});const r={key:"v-38a1b541",path:"/develop/other/abbreviation.html",title:"简称解析",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"D",slug:"d",children:[{level:3,title:"DI",slug:"di",children:[]}]},{level:2,title:"I",slug:"i",children:[{level:3,title:"IoC",slug:"ioc",children:[]}]}],filePathRelative:"develop/other/abbreviation.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},2110:(e,a,i)=>{i.r(a),i.d(a,{default:()=>d});const r=(0,i(6252).uE)('<h1 id="简称解析" tabindex="-1"><a class="header-anchor" href="#简称解析" aria-hidden="true">#</a> 简称解析</h1><h2 id="d" tabindex="-1"><a class="header-anchor" href="#d" aria-hidden="true">#</a> D</h2><h3 id="di" tabindex="-1"><a class="header-anchor" href="#di" aria-hidden="true">#</a> DI</h3><p>DI，全称Dependency Injection，即依赖注入，是实现IoC的其中一种设计方法。</p><h2 id="i" tabindex="-1"><a class="header-anchor" href="#i" aria-hidden="true">#</a> I</h2><h3 id="ioc" tabindex="-1"><a class="header-anchor" href="#ioc" aria-hidden="true">#</a> IoC</h3><p>IoC，全称Inversion of Control，即“控制反转”，是一种设计原则</p>',7),d={render:function(e,a){return r}}}}]);