"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7764],{6844:(e,t,i)=>{i.r(t),i.d(t,{data:()=>o});const o={key:"v-4e6b55a6",path:"/tool/git/base.html",title:"git 基础",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"基本操作",slug:"基本操作",children:[]},{level:2,title:"远程仓库",slug:"远程仓库",children:[]},{level:2,title:"分支管理",slug:"分支管理",children:[{level:3,title:"分支基本操作",slug:"分支基本操作",children:[]}]},{level:2,title:"Bug",slug:"bug",children:[]},{level:2,title:"冲突",slug:"冲突",children:[]},{level:2,title:"标签",slug:"标签",children:[{level:3,title:"本地",slug:"本地",children:[]},{level:3,title:"远程",slug:"远程",children:[]}]},{level:2,title:"补充",slug:"补充",children:[]},{level:2,title:"问题",slug:"问题",children:[{level:3,title:"多账号问题",slug:"多账号问题",children:[]}]},{level:2,title:"references",slug:"references",children:[]}],filePathRelative:"tool/git/base.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},6987:(e,t,i)=>{i.r(t),i.d(t,{default:()=>y});var o=i(6252);const l=(0,o.uE)('<h1 id="git-基础" tabindex="-1"><a class="header-anchor" href="#git-基础" aria-hidden="true">#</a> git 基础</h1><h2 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作" aria-hidden="true">#</a> 基本操作</h2><p>初始化：<code>git init</code></p><p>添加文件到Git仓库：</p><ol><li><p><code>git add &lt;file&gt;</code>：可反复多次使用，添加多个文件</p></li><li><p><code>git commit</code>：完成</p></li></ol><p><code>git status</code>：工作区的状态</p><p><code>git diff</code>：可以查看修改内容</p><p><code>git reset --hard commit_id</code>：版本恢复，<code>HEAD</code>指向的版本就是当前版本</p><p><code>git log</code>：查看提交历史</p><p><code>git reflog</code>：查看命令历史，以便确定要回到未来的哪个版本</p><p><code>git checkout -- file</code>：丢弃工作区的修改</p><p>如果修改未添加到暂缓区，想丢弃工作区的修改：</p><ol><li><code>git checkout -- file</code></li></ol><p>如果修改已经添加到了暂缓区，想丢弃修改：</p><ol><li><code>git reset HEAD file</code></li><li><code>git checkout -- file</code></li></ol><p>如果修改已经添加到了暂缓区,并且提交到了版本库：</p><ol><li><code>git reset --hard commit_id</code> 版本回退</li></ol><p><code>git rm</code>：删除</p><p><code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code>：创建SSH Key</p><h2 id="远程仓库" tabindex="-1"><a class="header-anchor" href="#远程仓库" aria-hidden="true">#</a> 远程仓库</h2><p>关联一个远程库： 1.<code>git remote add origin git@server-name:path/repo-name.git</code></p><p>2.<code>git push -u origin master</code>：第一次推送master分支的所有内容；</p><p>3.<code>git push origin master</code>：以后的推送修改</p><p><code>git remote -v</code>：查看远程库信息</p><p><code>$ git clone git@github.com:michaelliao/gitskills.git</code>：克隆</p><h2 id="分支管理" tabindex="-1"><a class="header-anchor" href="#分支管理" aria-hidden="true">#</a> 分支管理</h2><blockquote><p>Git鼓励大量使用分支</p></blockquote><h3 id="分支基本操作" tabindex="-1"><a class="header-anchor" href="#分支基本操作" aria-hidden="true">#</a> 分支基本操作</h3><p><code>git branch -a</code>：查看远程分支</p><p><code>git branch</code>：查看分支</p><p><code>git branch &lt;name&gt;</code>：创建分支</p><p><code>git checkout &lt;name&gt;</code>：切换分支</p><p><code>git checkout -b &lt;name&gt;</code>：创建+切换分支</p><p><code>git merge &lt;name&gt;</code>：合并某分支到当前分支</p><p><code>git branch -d &lt;name&gt;</code>：删除分支</p><p><code>git log --graph --pretty=oneline --abbrev-commit</code>：查看分支的合并情况</p><p><code>git merge --no-ff -m &quot;merge with no-ff&quot; dev</code>：禁用Fast forward</p><blockquote><p>注意<code>--no-ff</code>参数，表示禁用Fast forward 合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并</p></blockquote><p><code>git checkout -b branch-name origin/branch-name</code>：在本地创建和远程分支对应的分支</p><blockquote><p>本地和远程分支的名称最好一致</p></blockquote><p><code>git branch --set-upstream branch-name origin/branch-name</code>：建立本地分支和远程分支的关联</p><p><code>git pull</code>：更新分支</p><p><code>git branch -D &lt;name&gt;</code>：删除分支</p><p><code>git push origin test</code> 把分支推到远程分支</p><h2 id="bug" tabindex="-1"><a class="header-anchor" href="#bug" aria-hidden="true">#</a> Bug</h2><p>修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除：</p><ol><li><p><code>git stash</code>：存储工作现场</p></li><li><p><code>git stash pop</code>：恢复并删除stash内容</p></li></ol><p><code>git stash apply</code>：恢复工作现场</p><p><code>git stash list</code>：查看stash内容</p><h2 id="冲突" tabindex="-1"><a class="header-anchor" href="#冲突" aria-hidden="true">#</a> 冲突</h2><ol><li><p>试图用<code>git push origin branch-name</code>推送自己的修改</p></li><li><p>如果推送失败，则因为远程分支比你的本地更新，需要先用<code>git pull</code>试图合并</p></li><li><p>如果合并有冲突，则解决冲突，并在本地提交</p></li><li><p>没有冲突或者解决掉冲突后，再用<code>git push origin branch-name</code>推送就能成功</p></li><li><p>如果<code>git pull</code>提示<strong>no tracking information</strong>，则说明本地分支和远程分支的链接关系没有创建，用命令<code>git branch --set-upstream branch-name origin/branch-name</code></p></li></ol><h2 id="标签" tabindex="-1"><a class="header-anchor" href="#标签" aria-hidden="true">#</a> 标签</h2><h3 id="本地" tabindex="-1"><a class="header-anchor" href="#本地" aria-hidden="true">#</a> 本地</h3><p><code>git tag &lt;name&gt;</code>：用于新建一个标签，默认为HEAD，也可以指定一个commit id</p><p><code>git tag -a &lt;tagname&gt; -m &quot;qaq...&quot;</code>：可以指定标签信息</p><p><code>git tag -s &lt;tagname&gt; -m &quot;qaq...&quot;</code>：可以用PGP签名标签</p><p><code>git show &lt;tagname&gt;</code>：查看标签详细信息</p><p><code>git tag</code>：可以查看所有标签</p><h3 id="远程" tabindex="-1"><a class="header-anchor" href="#远程" aria-hidden="true">#</a> 远程</h3><p><code>git push origin &lt;tagname&gt;</code>：推送一个本地标签</p><p><code>git push origin --tags</code>：推送全部未推送过的本地标签</p><p><code>git tag -d &lt;tagname&gt;</code>：删除一个本地标签</p><p><code>git push origin :refs/tags/&lt;tagname&gt;</code>：删除一个远程标签</p><h2 id="补充" tabindex="-1"><a class="header-anchor" href="#补充" aria-hidden="true">#</a> 补充</h2><ul><li><p>在GitHub上，可以任意Fork开源仓库</p></li><li><p>自己拥有Fork后的仓库的读写权限</p></li><li><p>可以推送pull request给官方仓库来贡献代码</p></li><li><p>忽略某些文件时，需要编写.gitignore</p></li><li><p>gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理</p></li></ul><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2>',66),a={href:"http://www.cnblogs.com/wei325/p/5278922.html",target:"_blank",rel:"noopener noreferrer"},r=(0,o.Uk)("Please enter a commit message to explain why this merge is necessary"),d=(0,o._)("li",null,[(0,o._)("p",null,"fatal: refusing to merge unrelated histories")],-1),c=(0,o._)("p",null,"git pull --allow-unrelated-histories",-1),n=(0,o._)("ul",null,[(0,o._)("li",null,"Git fetch和git pull的区别")],-1),p={href:"http://blog.csdn.net/hudashi/article/details/7664457",target:"_blank",rel:"noopener noreferrer"},h=(0,o.Uk)("http://blog.csdn.net/hudashi/article/details/7664457"),g=(0,o._)("h3",{id:"多账号问题",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#多账号问题","aria-hidden":"true"},"#"),(0,o.Uk)(" 多账号问题")],-1),s={href:"https://blog.csdn.net/kingsleytong/article/details/70176518",target:"_blank",rel:"noopener noreferrer"},u=(0,o.Uk)(" 一台电脑连接多个GitHub账号下的仓库"),m={href:"https://blog.csdn.net/junloin/article/details/75197880",target:"_blank",rel:"noopener noreferrer"},b=(0,o.Uk)("Git如何切换账户"),f={href:"https://www.jianshu.com/p/391a1e591eec",target:"_blank",rel:"noopener noreferrer"},k=(0,o.Uk)("解决 切换github账号后无法push的问题"),_={href:"https://www.jianshu.com/p/12badb7e6c10",target:"_blank",rel:"noopener noreferrer"},w=(0,o.Uk)("Git 最著名报错 “ERROR: Permission to XXX.git denied to user”终极解决方案"),q={href:"https://stackoverflow.com/questions/5335197/gits-famous-error-permission-to-git-denied-to-user",target:"_blank",rel:"noopener noreferrer"},v=(0,o.Uk)("Git's famous “ERROR: Permission to .git denied to user”"),x=(0,o._)("blockquote",null,[(0,o._)("h2",{id:"references",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#references","aria-hidden":"true"},"#"),(0,o.Uk)(" references")])],-1),G={href:"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000",target:"_blank",rel:"noopener noreferrer"},U=(0,o.Uk)("廖雪峰-Git教程"),y={render:function(e,t){const i=(0,o.up)("OutboundLink");return(0,o.wg)(),(0,o.iD)(o.HY,null,[l,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o._)("p",null,[(0,o._)("a",a,[r,(0,o.Wm)(i)])])]),d]),c,n,(0,o._)("p",null,[(0,o._)("a",p,[h,(0,o.Wm)(i)])]),g,(0,o._)("p",null,[(0,o._)("a",s,[u,(0,o.Wm)(i)])]),(0,o._)("p",null,[(0,o._)("a",m,[b,(0,o.Wm)(i)])]),(0,o._)("p",null,[(0,o._)("a",f,[k,(0,o.Wm)(i)])]),(0,o._)("p",null,[(0,o._)("a",_,[w,(0,o.Wm)(i)])]),(0,o._)("p",null,[(0,o._)("a",q,[v,(0,o.Wm)(i)])]),x,(0,o._)("ul",null,[(0,o._)("li",null,[(0,o._)("a",G,[U,(0,o.Wm)(i)])])])],64)}}}}]);