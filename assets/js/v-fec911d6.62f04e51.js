"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5547],{1331:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-fec911d6",path:"/web/js/js-modular-programming.html",title:"Javascript模块化编程",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"常规写法",slug:"常规写法",children:[]},{level:2,title:"对象写法",slug:"对象写法",children:[]}],filePathRelative:"web/js/js-modular-programming.md",git:{updatedTime:1626107275e3,contributors:[{name:"sunven",email:"604164227@qq.com",commits:1}]}}},3184:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="javascript模块化编程" tabindex="-1"><a class="header-anchor" href="#javascript模块化编程" aria-hidden="true">#</a> Javascript模块化编程</h1><h2 id="常规写法" tabindex="-1"><a class="header-anchor" href="#常规写法" aria-hidden="true">#</a> 常规写法</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">m1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">m2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="对象写法" tabindex="-1"><a class="header-anchor" href="#对象写法" aria-hidden="true">#</a> 对象写法</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> module1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n　　_count <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n　　<span class="token function-variable function">m1</span> <span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n　　　　<span class="token comment">//...</span>\n　　<span class="token punctuation">}</span><span class="token punctuation">,</span>\n　　<span class="token function-variable function">m2</span> <span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n　　　　<span class="token comment">//...</span>\n　　<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',5),p={render:function(n,s){return e}}}}]);